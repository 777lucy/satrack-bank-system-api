//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SatrackBankSystem.Infrastructure.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SatrackBankSystem.Infrastructure.Resources.SqlResources", typeof(SqlResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(1) FROM FinancialProducts WHERE Identification = @Identification AND ProductType = @ProductType
        ///.
        /// </summary>
        internal static string AccountExist {
            get {
                return ResourceManager.GetString("AccountExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(1) FROM FinancialProducts WHERE ProductId = @AccountId
        ///.
        /// </summary>
        internal static string AccountExistByAccountId {
            get {
                return ResourceManager.GetString("AccountExistByAccountId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(1) FROM FinancialProducts WHERE ProductId = @AccountId AND ProductType = @ProductType
        ///.
        /// </summary>
        internal static string AccountExistByIdAndType {
            get {
                return ResourceManager.GetString("AccountExistByIdAndType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  BEGIN TRY 
        ///	BEGIN TRANSACTION;
        ///
        ///		UPDATE [dbo].[CurrentAccounts]
        ///		   SET [Balance] = @Balance
        ///		 WHERE ProductId = @ProductId
        ///
        ///	COMMIT TRANSACTION;
        ///END TRY 
        ///BEGIN CATCH 
        ///
        ///	ROLLBACK TRANSACTION;
        ///
        ///	THROW;
        ///
        ///END CATCH;.
        /// </summary>
        internal static string ApplyTransactionCurrent {
            get {
                return ResourceManager.GetString("ApplyTransactionCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  BEGIN TRY 
        ///	BEGIN TRANSACTION;
        ///
        ///		UPDATE [dbo].[SavingsAccounts]
        ///		   SET [Balance] = @Balance
        ///		 WHERE ProductId = @ProductId
        ///
        ///	COMMIT TRANSACTION;
        ///END TRY 
        ///BEGIN CATCH 
        ///
        ///	ROLLBACK TRANSACTION;
        ///
        ///	THROW;
        ///
        ///END CATCH;.
        /// </summary>
        internal static string ApplyTransactionSavings {
            get {
                return ResourceManager.GetString("ApplyTransactionSavings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY 
        ///	BEGIN TRANSACTION;
        ///		DECLARE @CDTBalance DECIMAL(18, 2);
        ///		DECLARE @ProductId UNIQUEIDENTIFIER;
        ///		DECLARE @Identification NVARCHAR(50);
        ///		DECLARE @SavingsProductId UNIQUEIDENTIFIER;
        ///
        ///		SELECT @ProductId = ProductId, @CDTBalance = DepositAmount
        ///		FROM CDTs
        ///		WHERE ProductId = @AccountId;
        ///
        ///		IF @ProductId IS NULL
        ///		BEGIN
        ///			ROLLBACK TRANSACTION;
        ///			RAISERROR(&apos;El CDT no existe.&apos;, 16, 1);
        ///			RETURN;
        ///		END
        ///
        ///		SELECT @Identification = Identification
        ///		FROM FinancialProducts
        ///		WHERE ProductId = @Prod [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CancelCDT {
            get {
                return ResourceManager.GetString("CancelCDT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(1) FROM Clients WHERE Identification = @Identification.
        /// </summary>
        internal static string ClientExist {
            get {
                return ResourceManager.GetString("ClientExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY 
        ///    BEGIN TRANSACTION;
        ///
        ///    INSERT INTO [dbo].[Clients] (
        ///            [Identification],
        ///            [Name],
        ///            [ClientType],
        ///            [CreatedAt]
        ///        ) 
        ///    VALUES (
        ///        @IdentificationNumber,
        ///        @Name, 
        ///        @ClientType, 
        ///        GETDATE());
        ///
        ///    INSERT INTO [dbo].[BusinessClients]
        ///            ([Identification]
        ///            ,[LegalRepresentativeId]
        ///            ,[LegalRepresentativeName]
        ///            ,[LegalRepresentativePhone])
        ///    VALUES
        ///        (@ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateBusinessClient {
            get {
                return ResourceManager.GetString("CreateBusinessClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY 
        ///    BEGIN TRANSACTION;
        ///
        ///    INSERT INTO [dbo].[FinancialProducts]
        ///           ([ProductId]
        ///           ,[Identification]
        ///           ,[ProductType]
        ///           ,[CreatedAt])
        ///     VALUES
        ///           (@ProductId
        ///           ,@IdentificationNumber
        ///           ,@ProductType
        ///           ,GETDATE())
        ///
        ///    INSERT INTO [dbo].[CDTs]
        ///           ([ProductId]
        ///           ,[DepositAmount]
        ///           ,[InterestRate]
        ///           ,[MaturityDate])
        ///     VALUES
        ///           (@ProductId
        ///           ,@DepositA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateCDTAccount {
            get {
                return ResourceManager.GetString("CreateCDTAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY 
        ///    BEGIN TRANSACTION;
        ///
        ///    INSERT INTO [dbo].[FinancialProducts]
        ///           ([ProductId]
        ///           ,[Identification]
        ///           ,[ProductType]
        ///           ,[CreatedAt])
        ///     VALUES
        ///           (@ProductId
        ///           ,@IdentificationNumber
        ///           ,@ProductType
        ///           ,GETDATE())
        ///
        ///    INSERT INTO [dbo].[CurrentAccounts]
        ///           ([ProductId]
        ///           ,[Balance])
        ///     VALUES
        ///           (@ProductId
        ///           ,@Balance)
        ///
        ///    COMMIT TRANSACTION;
        ///END TRY 
        ///BEGIN CATCH  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateCurrentAccount {
            get {
                return ResourceManager.GetString("CreateCurrentAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY 
        ///	BEGIN TRANSACTION;
        ///
        ///		INSERT INTO [dbo].[Clients] (
        ///				[Identification],
        ///				[Name],
        ///				[ClientType],
        ///				[CreatedAt]
        ///			) 
        ///		VALUES (
        ///		@IdentificationNumber,
        ///		@Name, 
        ///		@ClientType, 
        ///		GETDATE())
        ///
        ///
        ///	COMMIT TRANSACTION;
        ///END TRY 
        ///BEGIN CATCH 
        ///
        ///	ROLLBACK TRANSACTION;
        ///
        ///	THROW;
        ///
        ///END CATCH;.
        /// </summary>
        internal static string CreateIndividualClient {
            get {
                return ResourceManager.GetString("CreateIndividualClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN TRY 
        ///    BEGIN TRANSACTION;
        ///
        ///    INSERT INTO [dbo].[FinancialProducts]
        ///           ([ProductId]
        ///           ,[Identification]
        ///           ,[ProductType]
        ///           ,[CreatedAt])
        ///     VALUES
        ///           (@ProductId
        ///           ,@IdentificationNumber
        ///           ,@ProductType
        ///           ,GETDATE())
        ///
        ///    INSERT INTO [dbo].[SavingsAccounts]
        ///           ([ProductId]
        ///           ,[Balance]
        ///           ,[InterestRate])
        ///     VALUES
        ///           (@ProductId
        ///           ,@Balance
        ///           ,@InterestR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateSavingsAccount {
            get {
                return ResourceManager.GetString("CreateSavingsAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    AVG(CAST(
        ///        CASE WHEN c.ClientType = 1 THEN 
        ///            COALESCE(sa.Balance, 0) + 
        ///            COALESCE(cd.DepositAmount, 0) + 
        ///            COALESCE(ca.Balance, 0) 
        ///        END AS DECIMAL(18, 2)
        ///    )) AS BusinessClientAverageBalance,
        ///    
        ///    AVG(CAST(
        ///        CASE WHEN c.ClientType = 0 THEN 
        ///            COALESCE(sa.Balance, 0) + 
        ///            COALESCE(cd.DepositAmount, 0) + 
        ///            COALESCE(ca.Balance, 0) 
        ///        END AS DECIMAL(18, 2)
        ///    )) AS IndividualClientAverag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAverageBalance {
            get {
                return ResourceManager.GetString("GetAverageBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    fp.ProductId, 
        ///    ca.Balance, 
        ///	fp.Identification,
        ///	fp.CreatedAt,
        ///	fp.ProductType
        ///FROM CurrentAccounts ca
        ///INNER JOIN FinancialProducts fp on fp.ProductId = ca.ProductId
        ///WHERE fp.ProductId = @AccountId;
        ///.
        /// </summary>
        internal static string GetCurrentAccountById {
            get {
                return ResourceManager.GetString("GetCurrentAccountById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    fp.ProductId AS AccountId,
        ///    CASE 
        ///        WHEN sa.ProductId IS NOT NULL THEN fp.ProductType
        ///        WHEN cd.ProductId IS NOT NULL THEN fp.ProductType
        ///        WHEN ca.ProductId IS NOT NULL THEN fp.ProductType
        ///    END AS AccountType,
        ///    CASE 
        ///        WHEN sa.ProductId IS NOT NULL THEN sa.Balance + (sa.Balance * sa.InterestRate * @ProjectionMonths) 
        ///        WHEN cd.ProductId IS NOT NULL THEN cd.DepositAmount + (cd.DepositAmount * cd.InterestRate * @ProjectionMonths)
        ///        WHEN ca.Pr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetProjectionMonths {
            get {
                return ResourceManager.GetString("GetProjectionMonths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    fp.ProductId, 
        ///    sa.Balance, 
        ///	fp.Identification,
        ///	fp.CreatedAt,
        ///	fp.ProductType
        ///FROM SavingsAccounts sa
        ///INNER JOIN FinancialProducts fp on fp.ProductId = sa.ProductId
        ///WHERE sa.ProductId = @AccountId;
        ///.
        /// </summary>
        internal static string GetSavingsAccountById {
            get {
                return ResourceManager.GetString("GetSavingsAccountById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    fp.ProductId, 
        ///    sa.Balance, 
        ///	fp.Identification,
        ///	fp.CreatedAt,
        ///	fp.ProductType
        ///FROM SavingsAccounts sa
        ///INNER JOIN FinancialProducts fp on fp.ProductId = sa.ProductId
        ///WHERE fp.Identification = @Identification;
        ///.
        /// </summary>
        internal static string GetSavingsAccountByIdentification {
            get {
                return ResourceManager.GetString("GetSavingsAccountByIdentification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RankedClients AS (
        ///    SELECT 
        ///        c.ClientType,
        ///        c.Identification AS ClientIdentification,
        ///        SUM(COALESCE(sa.Balance, 0) + COALESCE(cd.DepositAmount, 0) + COALESCE(ca.Balance, 0)) AS TotalBalance,
        ///        ROW_NUMBER() OVER (PARTITION BY c.ClientType ORDER BY SUM(COALESCE(sa.Balance, 0) + COALESCE(cd.DepositAmount, 0) + COALESCE(ca.Balance, 0)) DESC) AS RowNum
        ///    FROM Clients c
        ///    INNER JOIN FinancialProducts fp ON c.Identification = fp.Identification
        ///    LEFT JOIN SavingsAcc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetTopClients {
            get {
                return ResourceManager.GetString("GetTopClients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    CASE 
        ///        WHEN EXISTS (
        ///            SELECT 1
        ///            FROM CDTs c
        ///            INNER JOIN FinancialProducts fp_cdt ON fp_cdt.ProductId = c.ProductId
        ///            INNER JOIN FinancialProducts fp_savings ON fp_savings.Identification = fp_cdt.Identification
        ///            INNER JOIN SavingsAccounts sa ON sa.ProductId = fp_savings.ProductId
        ///            WHERE c.ProductId = @CDTAccountId
        ///        ) THEN 1
        ///        ELSE 0
        ///    END AS HasSavingsAccount;
        ///.
        /// </summary>
        internal static string HaveSavingsAccountByCDTAccount {
            get {
                return ResourceManager.GetString("HaveSavingsAccountByCDTAccount", resourceCulture);
            }
        }
    }
}
